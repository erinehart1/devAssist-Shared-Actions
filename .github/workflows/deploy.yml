name: Deploy Metadata and Stamp CMDT

on:
  workflow_call:
    secrets:
      SF_USERNAME:
        required: true
      SF_CONSUMER_KEY:
        required: true
      SF_JWT_KEY:
        required: true
      SLACK_WEBHOOK_URL:
        required: false

jobs:
  deploy:
    name: Deploy to Salesforce
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Salesforce CLI
        uses: sfdx-actions/setup-sfdx@v1

      - name: Write JWT key to file
        run: echo "$SF_JWT_KEY" | base64 --decode > server.key
        env:
          SF_JWT_KEY: ${{ secrets.SF_JWT_KEY }}

      - name: Decode JWT and log username (sub)
        run: |
          # Base64 decode the JWT (just the header + payload for inspection)
          JWT_HEADER=$(jq -Rr 'split(".")[0]' <<< "SF_JWT_KEY") | base64 -d
          JWT_PAYLOAD=$(jq -Rr 'split(".")[1]' <<< SF_JWT_KEY) | base64 -d

          echo "JWT Header:"
          echo "$JWT_HEADER"

          echo "JWT Payload:"
          echo "$JWT_PAYLOAD"

          echo "JWT Username (sub):"
          echo "$JWT_PAYLOAD" | jq -r '.sub'
        env:
          SF_JWT: ${{ secrets.SF_JWT_TOKEN }}


      - name: Authenticate with JWT
        run: |
          sfdx auth:jwt:grant \
            --clientid ${{ secrets.SF_CONSUMER_KEY }} \
            --jwtkeyfile server.key \
            --username ${{ secrets.SF_USERNAME }} \
            --instanceurl https://test.salesforce.com \
            --setdefaultdevhubusername

      - name: Remove named credential before deploy
        run: rm -f force-app/main/default/namedCredentials/Cloudflare_GitHub_Proxy.namedCredential-meta.xml

      - name: Deploy metadata
        run: sfdx force:source:deploy -p force-app -u ${{ secrets.SF_USERNAME }} --json --loglevel fatal

      - name: Create DevAssist CMDT records
        run: |
          node .github/scripts/create-current-cmdt.js
          node .github/scripts/create-history-cmdt.js

  notify:
    name: Notify on failure
    needs: deploy
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Send Slack alert (example)
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{
            "text": "ðŸš¨ DevAssist deploy failed in GitHub Actions. Check the logs."
          }' ${{ secrets.SLACK_WEBHOOK_URL }}
